<VirtualHost *:80>
  ServerName __wpn_base_dir__.${HTTPD_DN_SUFFIX}
  ServerAlias *.__wpn_base_dir__.${HTTPD_DN_SUFFIX}
  DocumentRoot /srv/__wpn_base_dir__/wp
    
  # Redirect remote clients to https for everything except acme challenges.
  <If "%{REMOTE_ADDR} != '127.0.0.1'">
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteCond %{REQUEST_URI} !^\/\.well-known\/acme-challenge\/.+$
    RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [R,L]
  </If>

  # Configure acme challenge directory.
  Alias "/.well-known/acme-challenge" "/srv/__wpn_base_dir__/.well-known/acme-challenge"

  <Directory "/srv/__wpn_base_dir__/.well-known/acme-challenge">
     AllowOverride All
     Order allow,deny
     Allow from all
     Require all granted
  </Directory>

  # Define a worker for the fastcgi backend.
  # We keep the maximum connection number relatively low since it is
  # a multiple of the number of event workers.
  <Proxy "fcgi://127.0.0.1:9000" flushpackets=on keepalive=on enablereuse=on max=5 connectiontimeout=300 timeout=300>
  </Proxy>

  <FilesMatch "\.php$">
    # Pass authorization headers to fcgi.
    CGIPassAuth on
    
    # Don't gzip php backend.
    SetEnv no-gzip 1

    # Don't generate default expires headers for php backend.
    <IfModule mod_expires.c>
      ExpiresActive Off
    </IfModule>

    # Create a pass-through so fcgi is handled as a reverse proxy for php files.
    # This allows worker configuration and for
    # sending the correct PATH_INFO to be the backend in all circumstances.
    <If "%{REMOTE_ADDR} == '127.0.0.1'">
      SetHandler  "proxy:fcgi://127.0.0.1:9000"
    </If>
  </FilesMatch>

  # We only serve cleartext on localhost.
  <Directory "/srv/__wpn_base_dir__/wp>
    DirectoryIndex index.php
    Options Indexes FollowSymLinks
    AllowOverride All
    Order deny,allow
    Allow from 127.0.0.1
    Require all granted

    <IfModule mod_rewrite.c>
        RewriteEngine On
        RewriteBase /
        RewriteRule ^index\.php$ - [L]
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteRule . /index.php [L]
    </IfModule>
  </Directory>

</VirtualHost>

<VirtualHost *:443>
  Include {{ httpd_etc_dir }}/conf.d/00ssl.include
  SSLCertificateFile ${HTTPD_CERT_PATH}/star.${HTTPD_DN_SUFFIX}/cert.pem
  SSLCertificateKeyFile ${HTTPD_KEY_PATH}/star.${HTTPD_DN_SUFFIX}/privkey.pem
  SSLCertificateChainFile ${HTTPD_CERT_PATH}/star.${HTTPD_DN_SUFFIX}/chain.pem

  ServerName __wpn_base_dir__.${HTTPD_DN_SUFFIX}
  ServerAlias *.__wpn_base_dir__.${HTTPD_DN_SUFFIX}
  DocumentRoot /srv/__wpn_base_dir__/wp

  # Deny direct access to php files.
  <FilesMatch "\.php$">
    order allow,deny
    deny from all
  </FilesMatch>

  # Proxy indexes and php requests to our cleartext backend.
  # Proxy works on http/1.1 only, so proxy as little as possible.
  <LocationMatch "(.*)(\.php)|(\/)$">
    ProxyPreserveHost On
    ProxyPass "http://127.0.0.1"
    ProxyPassReverse "http://127.0.0.1"
	
    # Set this header so the application can check if we're using https.
    RequestHeader set X-Forwarded-Proto "https" env=HTTPS

    # Cache if possible.
    <IfModule mod_cache.c>
      <IfModule mod_cache_disk.c>
        # Don't generate default expires headers on the front end.
        ExpiresActive Off
        CacheEnable disk
        UnSetEnv no-cache
      </IfModule>
    </IfModule>
  </LocationMatch>

  # Serve static assets directly.
  <Directory "/srv/__wpn_base_dir__/wp>
    DirectoryIndex index.php
    Options Indexes FollowSymLinks
    AllowOverride All
    Order allow,deny
    Allow from all
    Require all granted

    <IfModule mod_rewrite.c>
        RewriteEngine On
        RewriteBase /
        RewriteRule ^index\.php$ - [L]
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteRule . /index.php [L]
    </IfModule>
  </Directory>

</VirtualHost>
